{"message":"the `#[global_allocator]` in ink_allocator conflicts with global allocator in: ink_allocator","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: the `#[global_allocator]` in ink_allocator conflicts with global allocator in: ink_allocator\u001b[0m\n\n"}
{"message":"unused import: `ink_lang as ink`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":48,"byte_end":63,"line_start":3,"line_end":3,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use ink_lang as ink;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":44,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use ink_lang as ink;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ink_lang as ink`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse ink_lang as ink;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `traits::psp22::PSP22Ref`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":254,"byte_end":277,"line_start":13,"line_end":13,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"            traits::psp22::PSP22Ref,","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":160,"byte_end":296,"line_start":9,"line_end":15,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    #[cfg(not(feature = \"ink-as-dependency\"))]","highlight_start":5,"highlight_end":47},{"text":"    use brush::{","highlight_start":1,"highlight_end":17},{"text":"        contracts::{","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            traits::psp22::PSP22Ref,","highlight_start":1,"highlight_end":37},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `traits::psp22::PSP22Ref`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:13:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            traits::psp22::PSP22Ref,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"duplicate lang item in crate `ink_env` (which `brush_lang` depends on): `panic_impl`.","code":null,"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `ink_env` (which `trading_pair` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `ink_env` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-eec4cedddd2714cf.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-eec4cedddd2714cf.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `ink_env` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-0df6419cb4edb394.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-0df6419cb4edb394.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `ink_env` (which `brush_lang` depends on): `panic_impl`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `ink_env` (which `trading_pair` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `ink_env` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-eec4cedddd2714cf.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-eec4cedddd2714cf.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `ink_env` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-0df6419cb4edb394.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_env-0df6419cb4edb394.rmeta\u001b[0m\n\n"}
{"message":"duplicate lang item in crate `ink_allocator` (which `ink_env` depends on): `oom`.","code":null,"level":"error","spans":[],"children":[{"message":"the lang item is first defined in crate `ink_allocator` (which `ink_env` depends on)","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"first definition in `ink_allocator` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-e8a5205a1a72cb8e.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-e8a5205a1a72cb8e.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"second definition in `ink_allocator` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-1116adb414bd9b49.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-1116adb414bd9b49.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: duplicate lang item in crate `ink_allocator` (which `ink_env` depends on): `oom`.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the lang item is first defined in crate `ink_allocator` (which `ink_env` depends on)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: first definition in `ink_allocator` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-e8a5205a1a72cb8e.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-e8a5205a1a72cb8e.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: second definition in `ink_allocator` loaded from /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-1116adb414bd9b49.rlib, /home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/ink/wasm32-unknown-unknown/release/deps/libink_allocator-1116adb414bd9b49.rmeta\u001b[0m\n\n"}
{"message":"missing fields `token_a_account_id` and `token_b_account_id` in initializer of `TradingPairPsp22`","code":{"code":"E0063","explanation":"A struct's or struct-like enum variant's field was not provided.\n\nErroneous code example:\n\n```compile_fail,E0063\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0 }; // error: missing field: `y`\n}\n```\n\nEach field should be specified exactly once. Example:\n\n```\nstruct Foo {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let x = Foo { x: 0, y: 0 }; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":1233,"byte_end":1237,"line_start":50,"line_end":50,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"            let me = Self {token_a_price_as_input:0,token_a_pool:0,token_b_pool:0,fees:init_value};","highlight_start":22,"highlight_end":26}],"label":"missing `token_a_account_id` and `token_b_account_id`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0063]\u001b[0m\u001b[0m\u001b[1m: missing fields `token_a_account_id` and `token_b_account_id` in initializer of `TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:50:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let me = Self {token_a_price_as_input:0,token_a_pool:0,token_b_pool:0,fees:init_value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `token_a_account_id` and `token_b_account_id`\u001b[0m\n\n"}
{"message":"no field `token_a` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":1917,"byte_end":1924,"line_start":79,"line_end":79,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"            let token_a = self.token_a.symbol();","highlight_start":32,"highlight_end":39}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_a` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:79:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_a = self.token_a.symbol();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"no field `token_b` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":1966,"byte_end":1973,"line_start":80,"line_end":80,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"            let token_b = self.token_b.symbol();","highlight_start":32,"highlight_end":39}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_b` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:80:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_b = self.token_b.symbol();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"no field `token_a` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":2163,"byte_end":2170,"line_start":88,"line_end":88,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"            let token_symbol = self.token_a.symbol();","highlight_start":37,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_a` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:88:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_symbol = self.token_a.symbol();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"no field `token_a` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":2215,"byte_end":2222,"line_start":89,"line_end":89,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"            let token_name = self.token_a.name();","highlight_start":35,"highlight_end":42}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_a` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:89:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_name = self.token_a.name();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"no field `token_b` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":2429,"byte_end":2436,"line_start":97,"line_end":97,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"            let token_symbol = self.token_b.symbol();","highlight_start":37,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_b` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:97:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_symbol = self.token_b.symbol();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"no field `token_b` on type `&TradingPairPsp22`","code":{"code":"E0609","explanation":"Attempted to access a non-existent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs","byte_start":2481,"byte_end":2488,"line_start":98,"line_end":98,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"            let token_name = self.token_b.name();","highlight_start":35,"highlight_end":42}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m: no field `token_b` on type `&TradingPairPsp22`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/lib.rs:98:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let token_name = self.token_b.name();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: available fields are: `fees`, `token_a_account_id`, `token_b_account_id`, `token_a_pool`, `token_b_pool`, `token_a_price_as_input`\u001b[0m\n\n"}
{"message":"aborting due to 10 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0063, E0609.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0063, E0609.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0063`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0063`.\u001b[0m\n"}
