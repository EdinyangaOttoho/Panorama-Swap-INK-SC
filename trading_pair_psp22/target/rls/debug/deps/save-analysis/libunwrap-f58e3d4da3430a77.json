{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1","program":"/home/yoni/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","unwrap","/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f58e3d4da3430a77","-C","extra-filename=-f58e3d4da3430a77","--out-dir","/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/rls/debug/deps","-L","dependency=/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/yoni/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/yoni/CourseCryptoProjects/RustProjects/panorama/trading_pair_psp22/target/rls/debug/deps/libunwrap-f58e3d4da3430a77.rmeta"},"prelude":{"crate_id":{"name":"unwrap","disambiguator":[14213922026034362112,0]},"crate_root":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src","external_crates":[{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}}],"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":0,"byte_end":11575,"line_start":1,"line_end":327,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":0,"byte_end":11575,"line_start":1,"line_end":327,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":34}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":361,"byte_end":374,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"VerboseUnwrap","qualname":"::VerboseUnwrap","value":"VerboseUnwrap","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" Types which can be unwrapped and which may want to print a verbose error message when they are\n unwrapped incorrectly. This trait is implemented for `Result` and `Option` as a replacement for\n their inherent `unwrap` methods. This trait is intended to be used via this crate's `unwrap!`\n macro.\n","sig":null,"attributes":[{"value":"/ Types which can be unwrapped and which may want to print a verbose error message when they are","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":43,"byte_end":141,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ unwrapped incorrectly. This trait is implemented for `Result` and `Option` as a replacement for","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":142,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ their inherent `unwrap` methods. This trait is intended to be used via this crate's `unwrap!`","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":242,"byte_end":339,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ macro.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":340,"byte_end":350,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":412,"byte_end":419,"line_start":9,"line_end":9,"column_start":10,"column_end":17},"name":"Wrapped","qualname":"::VerboseUnwrap::Wrapped","value":"type Wrapped;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" The wrapped type.\n","sig":null,"attributes":[{"value":"/ The wrapped type.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":381,"byte_end":402,"line_start":8,"line_end":8,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1308,"byte_end":1322,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"verbose_unwrap","qualname":"::VerboseUnwrap::verbose_unwrap","value":"pub fn verbose_unwrap(Self, Option<Arguments>, &str, &str, u32, u32)\n-> Self::Wrapped","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Unwrap the value into its inner type or panics with an error message when the value\n cannot be unwrapped. This method is intended to be called via this crate's `unwrap!` macro.","sig":null,"attributes":[{"value":"/ Unwrap the value into its inner type or panics with an error message when the value","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":426,"byte_end":513,"line_start":11,"line_end":11,"column_start":5,"column_end":92}},{"value":"/ cannot be unwrapped. This method is intended to be called via this crate's `unwrap!` macro.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":518,"byte_end":613,"line_start":12,"line_end":12,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":618,"byte_end":621,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":626,"byte_end":638,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":643,"byte_end":646,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ When the value cannot be unwrapped. Eg. on an `Err` or `None` value.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":651,"byte_end":723,"line_start":16,"line_end":16,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":728,"byte_end":731,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":736,"byte_end":751,"line_start":18,"line_end":18,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":756,"byte_end":759,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ These arguments are used to print a useful diagnostic when the method panics.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":764,"byte_end":845,"line_start":20,"line_end":20,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":850,"byte_end":853,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/  * `message`: An optional message, printed alongside the rest of the info.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":858,"byte_end":936,"line_start":22,"line_end":22,"column_start":5,"column_end":83}},{"value":"/  * `module_path`: The module path where this method is being called from. Eg.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":941,"byte_end":1022,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/    `my_crate::my_module::my_function`","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1027,"byte_end":1068,"line_start":24,"line_end":24,"column_start":5,"column_end":46}},{"value":"/  * `file`: The filename where this method is being called from.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1073,"byte_end":1140,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/  * `line_number`: The line number where this method is being called from.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1145,"byte_end":1222,"line_start":26,"line_end":26,"column_start":5,"column_end":82}},{"value":"/  * `column`: The column number where this method is being called from","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1227,"byte_end":1300,"line_start":27,"line_end":27,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5905,"byte_end":5921,"line_start":151,"line_end":151,"column_start":11,"column_end":27},"name":"VerboseUnwrapErr","qualname":"::VerboseUnwrapErr","value":"VerboseUnwrapErr","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" Types which can be unwrapped into an error type and which may want to print a verbose error\n message when they are unwrapped incorrectly. This trait is implemented for `Result` as a\n replacement for its inherent `unwrap_err`. This trait is intended to be used via this crate's\n `unwrap_err!` macro.\n","sig":null,"attributes":[{"value":"/ Types which can be unwrapped into an error type and which may want to print a verbose error","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5583,"byte_end":5678,"line_start":147,"line_end":147,"column_start":1,"column_end":96}},{"value":"/ message when they are unwrapped incorrectly. This trait is implemented for `Result` as a","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5679,"byte_end":5771,"line_start":148,"line_end":148,"column_start":1,"column_end":93}},{"value":"/ replacement for its inherent `unwrap_err`. This trait is intended to be used via this crate's","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5772,"byte_end":5869,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ `unwrap_err!` macro.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5870,"byte_end":5894,"line_start":150,"line_end":150,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5959,"byte_end":5966,"line_start":153,"line_end":153,"column_start":10,"column_end":17},"name":"Wrapped","qualname":"::VerboseUnwrapErr::Wrapped","value":"type Wrapped;","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" The wrapped type.\n","sig":null,"attributes":[{"value":"/ The wrapped type.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5928,"byte_end":5949,"line_start":152,"line_end":152,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6880,"byte_end":6898,"line_start":173,"line_end":173,"column_start":8,"column_end":26},"name":"verbose_unwrap_err","qualname":"::VerboseUnwrapErr::verbose_unwrap_err","value":"pub fn verbose_unwrap_err(Self, Option<Arguments>, &str, &str, u32, u32)\n-> Self::Wrapped","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Unwrap the value into its inner error type or panics with an error message when the error\n cannot be unwrapped. This method is intended to be called via this crate's `unwrap_err!`\n macro.","sig":null,"attributes":[{"value":"/ Unwrap the value into its inner error type or panics with an error message when the error","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":5973,"byte_end":6066,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ cannot be unwrapped. This method is intended to be called via this crate's `unwrap_err!`","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6071,"byte_end":6163,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ macro.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6168,"byte_end":6178,"line_start":157,"line_end":157,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6183,"byte_end":6186,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6191,"byte_end":6203,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6208,"byte_end":6211,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ When the value cannot be unwrapped to its error type. Eg. on an `Ok` value.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6216,"byte_end":6295,"line_start":161,"line_end":161,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6300,"byte_end":6303,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6308,"byte_end":6323,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ These arguments are used to print a useful diagnostic when the method panics.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6336,"byte_end":6417,"line_start":165,"line_end":165,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6422,"byte_end":6425,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `message`: An optional message, printed alongside the rest of the info.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6430,"byte_end":6508,"line_start":167,"line_end":167,"column_start":5,"column_end":83}},{"value":"/  * `module_path`: The module path where this method is being called from. Eg.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6513,"byte_end":6594,"line_start":168,"line_end":168,"column_start":5,"column_end":86}},{"value":"/    `my_crate::my_module::my_function`","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6599,"byte_end":6640,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/  * `file`: The filename where this method is being called from.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6645,"byte_end":6712,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/  * `line_number`: The line number where this method is being called from.","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6717,"byte_end":6794,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/  * `column`: The column number where this method is being called from","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":6799,"byte_end":6872,"line_start":172,"line_end":172,"column_start":5,"column_end":78}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1476,"byte_end":1482,"line_start":31,"line_end":31,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":3301,"byte_end":3307,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":7055,"byte_end":7061,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":1476,"byte_end":1482,"line_start":31,"line_end":31,"column_start":37,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":3301,"byte_end":3307,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":45092},"to":{"krate":0,"index":13}},{"span":{"file_name":"/home/yoni/.cargo/registry/src/github.com-1ecc6299db9ec823/unwrap-1.2.1/src/lib.rs","byte_start":7055,"byte_end":7061,"line_start":176,"line_end":176,"column_start":40,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":26}}]}